{"version":3,"file":"index-vO0c4Hy_.js","sources":["../../src/utils/constants.ts","../../src/components/Timer.ts","../../src/components/Display.ts","../../src/components/Controls.ts","../../src/components/Statistics.ts","../../src/components/Settings.ts","../../src/utils/todoStorage.ts","../../src/components/TodoList.ts","../../src/utils/audio.ts","../../src/utils/storage.ts","../../src/main.ts"],"sourcesContent":["export const DEFAULT_SETTINGS = {\n  workDuration: 25, // minutes\n  shortBreak: 5,    // minutes\n  longBreak: 15,    // minutes\n  sessionsUntilLongBreak: 4,\n  autoStartBreaks: false,\n  soundEnabled: true\n};\n\nexport const SESSION_TYPES = {\n  WORK: 'work',\n  SHORT_BREAK: 'shortBreak',\n  LONG_BREAK: 'longBreak'\n} as const;\n\nexport const TIMER_STATES = {\n  IDLE: 'idle',\n  RUNNING: 'running',\n  PAUSED: 'paused',\n  COMPLETED: 'completed'\n} as const;\n\nexport const STORAGE_KEYS = {\n  SETTINGS: 'fokus_settings',\n  STATISTICS: 'fokus_statistics',\n  SESSION_HISTORY: 'fokus_session_history'\n} as const;\n\nexport type SessionType = typeof SESSION_TYPES[keyof typeof SESSION_TYPES];\nexport type TimerState = typeof TIMER_STATES[keyof typeof TIMER_STATES];\nexport type Settings = typeof DEFAULT_SETTINGS;","import { SESSION_TYPES, TIMER_STATES, DEFAULT_SETTINGS, type SessionType, type TimerState, type Settings } from '../utils/constants.js';\n\nexport interface TimerEventData {\n  timeRemaining: number;\n  sessionType: SessionType;\n  state: TimerState;\n  sessionsCompleted: number;\n  progress: number;\n}\n\nexport class PomodoroTimer extends EventTarget {\n  private timeRemaining: number = 0;\n  private sessionType: SessionType = SESSION_TYPES.WORK;\n  private state: TimerState = TIMER_STATES.IDLE;\n  private sessionsCompleted: number = 0;\n  private intervalId: number | null = null;\n  private settings: Settings = { ...DEFAULT_SETTINGS };\n\n  constructor(settings?: Partial<Settings>) {\n    super();\n    if (settings) {\n      this.updateSettings(settings);\n    }\n    this.reset();\n  }\n\n  public start(): void {\n    if (this.state === TIMER_STATES.IDLE) {\n      this.timeRemaining = this.getCurrentSessionDuration() * 60;\n    }\n\n    this.state = TIMER_STATES.RUNNING;\n    this.intervalId = window.setInterval(() => {\n      this.tick();\n    }, 1000);\n\n    this.dispatchTimerEvent();\n  }\n\n  public pause(): void {\n    if (this.state === TIMER_STATES.RUNNING) {\n      this.state = TIMER_STATES.PAUSED;\n      this.clearInterval();\n      this.dispatchTimerEvent();\n    }\n  }\n\n  public resume(): void {\n    if (this.state === TIMER_STATES.PAUSED) {\n      this.start();\n    }\n  }\n\n  public reset(): void {\n    this.state = TIMER_STATES.IDLE;\n    this.clearInterval();\n    this.timeRemaining = this.getCurrentSessionDuration() * 60;\n    this.dispatchTimerEvent();\n  }\n\n  public skip(): void {\n    this.completeSession();\n  }\n\n  public updateSettings(newSettings: Partial<Settings>): void {\n    this.settings = { ...this.settings, ...newSettings };\n    if (this.state === TIMER_STATES.IDLE) {\n      this.timeRemaining = this.getCurrentSessionDuration() * 60;\n      this.dispatchTimerEvent();\n    }\n  }\n\n  private tick(): void {\n    this.timeRemaining--;\n\n    if (this.timeRemaining <= 0) {\n      this.completeSession();\n    } else {\n      this.dispatchTimerEvent();\n    }\n  }\n\n  private completeSession(): void {\n    this.state = TIMER_STATES.COMPLETED;\n    this.clearInterval();\n\n    if (this.sessionType === SESSION_TYPES.WORK) {\n      this.sessionsCompleted++;\n    }\n\n    this.dispatchTimerEvent();\n\n    // Auto-advance to next session\n    setTimeout(() => {\n      this.advanceToNextSession();\n    }, 1000);\n  }\n\n  private advanceToNextSession(): void {\n    this.sessionType = this.getNextSessionType();\n    this.timeRemaining = this.getCurrentSessionDuration() * 60;\n    this.state = TIMER_STATES.IDLE;\n\n    if (this.settings.autoStartBreaks && this.sessionType !== SESSION_TYPES.WORK) {\n      this.start();\n    } else {\n      this.dispatchTimerEvent();\n    }\n  }\n\n  private getNextSessionType(): SessionType {\n    if (this.sessionType === SESSION_TYPES.WORK) {\n      // After work, check if it's time for long break\n      return this.sessionsCompleted % this.settings.sessionsUntilLongBreak === 0\n        ? SESSION_TYPES.LONG_BREAK\n        : SESSION_TYPES.SHORT_BREAK;\n    } else {\n      // After any break, return to work\n      return SESSION_TYPES.WORK;\n    }\n  }\n\n  private getCurrentSessionDuration(): number {\n    switch (this.sessionType) {\n      case SESSION_TYPES.WORK:\n        return this.settings.workDuration;\n      case SESSION_TYPES.SHORT_BREAK:\n        return this.settings.shortBreak;\n      case SESSION_TYPES.LONG_BREAK:\n        return this.settings.longBreak;\n      default:\n        return this.settings.workDuration;\n    }\n  }\n\n  private clearInterval(): void {\n    if (this.intervalId !== null) {\n      window.clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  private dispatchTimerEvent(): void {\n    const totalDuration = this.getCurrentSessionDuration() * 60;\n    const progress = totalDuration > 0 ? ((totalDuration - this.timeRemaining) / totalDuration) * 100 : 0;\n\n    const eventData: TimerEventData = {\n      timeRemaining: this.timeRemaining,\n      sessionType: this.sessionType,\n      state: this.state,\n      sessionsCompleted: this.sessionsCompleted,\n      progress\n    };\n\n    this.dispatchEvent(new CustomEvent('timerUpdate', { detail: eventData }));\n  }\n\n  // Getters for current state\n  public getTimeRemaining(): number {\n    return this.timeRemaining;\n  }\n\n  public getSessionType(): SessionType {\n    return this.sessionType;\n  }\n\n  public getState(): TimerState {\n    return this.state;\n  }\n\n  public getSessionsCompleted(): number {\n    return this.sessionsCompleted;\n  }\n\n  public getSettings(): Settings {\n    return { ...this.settings };\n  }\n}","import { PomodoroTimer, type TimerEventData } from './Timer.js';\nimport { SESSION_TYPES, TIMER_STATES } from '../utils/constants.js';\n\nexport class TimerDisplay {\n  private timer: PomodoroTimer;\n  private sessionTypeElement: HTMLElement;\n  private timeDisplayElement: HTMLElement;\n  private progressFillElement: HTMLElement;\n\n  constructor(timer: PomodoroTimer) {\n    this.timer = timer;\n    this.sessionTypeElement = document.querySelector('.session-type') as HTMLElement;\n    this.timeDisplayElement = document.querySelector('.time-display') as HTMLElement;\n    this.progressFillElement = document.querySelector('.progress-fill') as HTMLElement;\n\n    this.timer.addEventListener('timerUpdate', this.handleTimerUpdate.bind(this));\n    this.updateDisplay();\n  }\n\n  private handleTimerUpdate(event: Event): void {\n    const eventData = (event as CustomEvent<TimerEventData>).detail;\n    this.updateDisplay(eventData);\n  }\n\n  private updateDisplay(data?: TimerEventData): void {\n    if (!data) {\n      // Initial display\n      this.sessionTypeElement.textContent = this.getSessionTypeText(this.timer.getSessionType());\n      this.timeDisplayElement.textContent = this.formatTime(this.timer.getTimeRemaining());\n      this.updateProgressIndicators(0);\n      return;\n    }\n\n    const { timeRemaining, sessionType, state, progress } = data;\n\n    // Update session type\n    this.sessionTypeElement.textContent = this.getSessionTypeText(sessionType);\n\n    // Update time display\n    this.timeDisplayElement.textContent = this.formatTime(timeRemaining);\n\n    // Update progress indicators (both circular and linear)\n    this.updateProgressIndicators(progress);\n\n    // Update circular timer gradient for break sessions\n    this.updateCircularTimerGradient(sessionType);\n\n    // Update visual state\n    this.updateVisualState(state, sessionType);\n\n    // Update document title\n    this.updateDocumentTitle(timeRemaining, sessionType, state);\n  }\n\n  private updateProgressIndicators(progress: number): void {\n    // Update linear progress bar\n    if (this.progressFillElement) {\n      this.progressFillElement.style.width = `${progress}%`;\n    }\n  }\n\n  private updateCircularTimerGradient(_sessionType: string): void {\n    // Removed - no longer using circular timer\n  }\n\n  private getSessionTypeText(sessionType: string): string {\n    switch (sessionType) {\n      case SESSION_TYPES.WORK:\n        return 'Work Session';\n      case SESSION_TYPES.SHORT_BREAK:\n        return 'Short Break';\n      case SESSION_TYPES.LONG_BREAK:\n        return 'Long Break';\n      default:\n        return 'Session';\n    }\n  }\n\n  private formatTime(totalSeconds: number): string {\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  }\n\n  private updateVisualState(state: string, sessionType: string): void {\n    const timerSection = document.querySelector('.timer-section') as HTMLElement;\n\n    // Remove all state classes\n    timerSection.classList.remove('running', 'paused', 'completed', 'work', 'break');\n\n    // Add current state class\n    timerSection.classList.add(state);\n\n    // Add session type class\n    if (sessionType === SESSION_TYPES.WORK) {\n      timerSection.classList.add('work');\n    } else {\n      timerSection.classList.add('break');\n    }\n  }\n\n  private updateDocumentTitle(timeRemaining: number, sessionType: string, state: string): void {\n    if (state === TIMER_STATES.RUNNING) {\n      const timeText = this.formatTime(timeRemaining);\n      const sessionText = sessionType === SESSION_TYPES.WORK ? 'Work' : 'Break';\n      document.title = `${timeText} - ${sessionText} | Fokus`;\n    } else {\n      document.title = 'Fokus - Pomodoro Timer';\n    }\n  }\n}","import { PomodoroTimer, type TimerEventData } from './Timer.js';\nimport { TIMER_STATES } from '../utils/constants.js';\n\nexport class TimerControls {\n  private timer: PomodoroTimer;\n  private startPauseBtn: HTMLButtonElement;\n  private resetBtn: HTMLButtonElement;\n\n  constructor(timer: PomodoroTimer) {\n    this.timer = timer;\n    this.startPauseBtn = document.getElementById('start-pause-btn') as HTMLButtonElement;\n    this.resetBtn = document.getElementById('reset-btn') as HTMLButtonElement;\n\n    this.bindEvents();\n    this.timer.addEventListener('timerUpdate', this.handleTimerUpdate.bind(this));\n  }\n\n  private bindEvents(): void {\n    this.startPauseBtn.addEventListener('click', () => {\n      this.handleStartPauseClick();\n    });\n\n    this.resetBtn.addEventListener('click', () => {\n      this.timer.reset();\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener('keydown', (e) => {\n      if (e.code === 'Space' && !this.isInputFocused()) {\n        e.preventDefault();\n        this.handleStartPauseClick();\n      } else if (e.code === 'KeyR' && !this.isInputFocused()) {\n        e.preventDefault();\n        this.timer.reset();\n      }\n    });\n  }\n\n  private handleStartPauseClick(): void {\n    const state = this.timer.getState();\n\n    switch (state) {\n      case TIMER_STATES.IDLE:\n      case TIMER_STATES.PAUSED:\n        this.timer.start();\n        break;\n      case TIMER_STATES.RUNNING:\n        this.timer.pause();\n        break;\n    }\n  }\n\n  private handleTimerUpdate(event: Event): void {\n    const { state } = (event as CustomEvent<TimerEventData>).detail;\n    this.updateButtonStates(state);\n  }\n\n  private updateButtonStates(state: string): void {\n    switch (state) {\n      case TIMER_STATES.IDLE:\n        this.startPauseBtn.textContent = 'Start';\n        this.startPauseBtn.className = 'control-btn primary';\n        this.resetBtn.disabled = false;\n        break;\n      case TIMER_STATES.RUNNING:\n        this.startPauseBtn.textContent = 'Pause';\n        this.startPauseBtn.className = 'control-btn secondary';\n        this.resetBtn.disabled = false;\n        break;\n      case TIMER_STATES.PAUSED:\n        this.startPauseBtn.textContent = 'Resume';\n        this.startPauseBtn.className = 'control-btn primary';\n        this.resetBtn.disabled = false;\n        break;\n      case TIMER_STATES.COMPLETED:\n        this.startPauseBtn.textContent = 'Start Next';\n        this.startPauseBtn.className = 'control-btn primary';\n        this.resetBtn.disabled = true;\n        break;\n    }\n  }\n\n  private isInputFocused(): boolean {\n    const activeElement = document.activeElement;\n    return activeElement instanceof HTMLInputElement ||\n           activeElement instanceof HTMLTextAreaElement ||\n           activeElement instanceof HTMLSelectElement;\n  }\n}","import { PomodoroTimer, type TimerEventData } from './Timer.js';\nimport { SESSION_TYPES, TIMER_STATES } from '../utils/constants.js';\n\ninterface DailyStats {\n  date: string;\n  sessionsCompleted: number;\n  focusTimeMinutes: number;\n  streak: number;\n}\n\nexport class Statistics {\n  private timer: PomodoroTimer;\n  private sessionsElement: HTMLElement;\n  private focusTimeElement: HTMLElement;\n  private streakElement: HTMLElement;\n  private dailyStats: DailyStats;\n\n  constructor(timer: PomodoroTimer) {\n    this.timer = timer;\n    this.sessionsElement = document.getElementById('sessions-completed') as HTMLElement;\n    this.focusTimeElement = document.getElementById('focus-time') as HTMLElement;\n    this.streakElement = document.getElementById('current-streak') as HTMLElement;\n\n    this.dailyStats = this.loadTodaysStats();\n    this.timer.addEventListener('timerUpdate', this.handleTimerUpdate.bind(this));\n    this.updateDisplay();\n  }\n\n  private handleTimerUpdate(event: Event): void {\n    const { state, sessionType, sessionsCompleted } = (event as CustomEvent<TimerEventData>).detail;\n\n    if (state === TIMER_STATES.COMPLETED && sessionType === SESSION_TYPES.WORK) {\n      this.recordCompletedSession();\n    }\n\n    this.updateSessionsFromTimer(sessionsCompleted);\n  }\n\n  private recordCompletedSession(): void {\n    const today = this.getTodayString();\n\n    if (this.dailyStats.date !== today) {\n      // New day, reset stats\n      this.dailyStats = {\n        date: today,\n        sessionsCompleted: 0,\n        focusTimeMinutes: 0,\n        streak: this.calculateNewDayStreak()\n      };\n    }\n\n    this.dailyStats.sessionsCompleted++;\n    this.dailyStats.focusTimeMinutes += this.timer.getSettings().workDuration;\n    this.dailyStats.streak = this.calculateCurrentStreak();\n\n    this.saveStats();\n    this.updateDisplay();\n  }\n\n  private updateSessionsFromTimer(sessionsCompleted: number): void {\n    // Update display to match timer's session count\n    if (this.dailyStats.sessionsCompleted !== sessionsCompleted) {\n      this.dailyStats.sessionsCompleted = sessionsCompleted;\n      this.updateDisplay();\n    }\n  }\n\n  private updateDisplay(): void {\n    this.sessionsElement.textContent = this.dailyStats.sessionsCompleted.toString();\n    this.focusTimeElement.textContent = this.formatFocusTime(this.dailyStats.focusTimeMinutes);\n    this.streakElement.textContent = this.dailyStats.streak.toString();\n  }\n\n  private formatFocusTime(minutes: number): string {\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n\n    if (hours > 0) {\n      return `${hours}h ${remainingMinutes}m`;\n    } else {\n      return `${remainingMinutes}m`;\n    }\n  }\n\n  private loadTodaysStats(): DailyStats {\n    const today = this.getTodayString();\n    const saved = localStorage.getItem('fokus_daily_stats');\n\n    if (saved) {\n      const parsed: DailyStats = JSON.parse(saved);\n      if (parsed.date === today) {\n        return parsed;\n      }\n    }\n\n    // Return new stats for today\n    return {\n      date: today,\n      sessionsCompleted: 0,\n      focusTimeMinutes: 0,\n      streak: this.loadStreakFromHistory()\n    };\n  }\n\n  private saveStats(): void {\n    localStorage.setItem('fokus_daily_stats', JSON.stringify(this.dailyStats));\n    this.saveToHistory();\n  }\n\n  private saveToHistory(): void {\n    const historyKey = 'fokus_session_history';\n    const existing = localStorage.getItem(historyKey);\n    const history: DailyStats[] = existing ? JSON.parse(existing) : [];\n\n    // Update or add today's entry\n    const todayIndex = history.findIndex(entry => entry.date === this.dailyStats.date);\n    if (todayIndex >= 0) {\n      history[todayIndex] = { ...this.dailyStats };\n    } else {\n      history.push({ ...this.dailyStats });\n    }\n\n    // Keep only last 30 days\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n    const filtered = history.filter(entry => new Date(entry.date) >= thirtyDaysAgo);\n\n    localStorage.setItem(historyKey, JSON.stringify(filtered));\n  }\n\n  private loadStreakFromHistory(): number {\n    const historyKey = 'fokus_session_history';\n    const existing = localStorage.getItem(historyKey);\n    if (!existing) return 0;\n\n    const history: DailyStats[] = JSON.parse(existing);\n    return this.calculateStreakFromHistory(history);\n  }\n\n  private calculateStreakFromHistory(history: DailyStats[]): number {\n    if (history.length === 0) return 0;\n\n    // Sort by date descending\n    const sorted = history.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n    let streak = 0;\n    const today = new Date();\n    let checkDate = new Date(today);\n\n    for (const entry of sorted) {\n      const entryDate = new Date(entry.date);\n\n      // Check if this entry is for the expected date\n      if (this.isSameDate(entryDate, checkDate) && entry.sessionsCompleted > 0) {\n        streak++;\n        checkDate.setDate(checkDate.getDate() - 1);\n      } else if (this.isSameDate(entryDate, checkDate)) {\n        // No sessions completed on this day, break streak\n        break;\n      }\n      // If entry is for an older date, continue checking\n    }\n\n    return streak;\n  }\n\n  private calculateNewDayStreak(): number {\n    // When starting a new day, calculate streak from history\n    return this.loadStreakFromHistory();\n  }\n\n  private calculateCurrentStreak(): number {\n    // Current streak includes today if we have sessions\n    if (this.dailyStats.sessionsCompleted > 0) {\n      const historyStreak = this.loadStreakFromHistory();\n      // If today is not yet in history, add 1 for today\n      return historyStreak + 1;\n    }\n    return this.loadStreakFromHistory();\n  }\n\n  private getTodayString(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  private isSameDate(date1: Date, date2: Date): boolean {\n    return date1.toISOString().split('T')[0] === date2.toISOString().split('T')[0];\n  }\n\n  // Public method to get current stats\n  public getStats(): DailyStats {\n    return { ...this.dailyStats };\n  }\n}","import { PomodoroTimer } from './Timer.js';\nimport { DEFAULT_SETTINGS, type Settings } from '../utils/constants.js';\n\nexport class SettingsManager {\n  private timer: PomodoroTimer;\n  private workDurationInput: HTMLInputElement;\n  private shortBreakInput: HTMLInputElement;\n  private longBreakInput: HTMLInputElement;\n  private autoStartInput: HTMLInputElement;\n  private soundEnabledInput: HTMLInputElement;\n\n  constructor(timer: PomodoroTimer) {\n    this.timer = timer;\n    this.workDurationInput = document.getElementById('work-duration') as HTMLInputElement;\n    this.shortBreakInput = document.getElementById('short-break') as HTMLInputElement;\n    this.longBreakInput = document.getElementById('long-break') as HTMLInputElement;\n    this.autoStartInput = document.getElementById('auto-start') as HTMLInputElement;\n    this.soundEnabledInput = document.getElementById('sound-enabled') as HTMLInputElement;\n\n    this.loadSettings();\n    this.bindEvents();\n  }\n\n  private bindEvents(): void {\n    // Debounce input changes to avoid excessive updates\n    let timeoutId: number;\n\n    const handleInputChange = () => {\n      clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(() => {\n        this.saveAndApplySettings();\n      }, 500);\n    };\n\n    this.workDurationInput.addEventListener('input', handleInputChange);\n    this.shortBreakInput.addEventListener('input', handleInputChange);\n    this.longBreakInput.addEventListener('input', handleInputChange);\n\n    // Checkboxes don't need debouncing\n    this.autoStartInput.addEventListener('change', () => {\n      this.saveAndApplySettings();\n    });\n\n    this.soundEnabledInput.addEventListener('change', () => {\n      this.saveAndApplySettings();\n    });\n\n    // Validate inputs on blur\n    [this.workDurationInput, this.shortBreakInput, this.longBreakInput].forEach(input => {\n      input.addEventListener('blur', () => {\n        this.validateInput(input);\n      });\n    });\n  }\n\n  private validateInput(input: HTMLInputElement): void {\n    const value = parseInt(input.value);\n    const min = parseInt(input.min);\n    const max = parseInt(input.max);\n\n    if (isNaN(value) || value < min) {\n      input.value = min.toString();\n    } else if (value > max) {\n      input.value = max.toString();\n    }\n  }\n\n  private loadSettings(): void {\n    const saved = localStorage.getItem('fokus_settings');\n    let settings: Settings;\n\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        settings = { ...DEFAULT_SETTINGS, ...parsed };\n      } catch {\n        settings = { ...DEFAULT_SETTINGS };\n      }\n    } else {\n      settings = { ...DEFAULT_SETTINGS };\n    }\n\n    // Apply to UI\n    this.workDurationInput.value = settings.workDuration.toString();\n    this.shortBreakInput.value = settings.shortBreak.toString();\n    this.longBreakInput.value = settings.longBreak.toString();\n    this.autoStartInput.checked = settings.autoStartBreaks;\n    this.soundEnabledInput.checked = settings.soundEnabled;\n\n    // Apply to timer\n    this.timer.updateSettings(settings);\n  }\n\n  private saveAndApplySettings(): void {\n    // Validate inputs first\n    this.validateInput(this.workDurationInput);\n    this.validateInput(this.shortBreakInput);\n    this.validateInput(this.longBreakInput);\n\n    const settings: Settings = {\n      workDuration: parseInt(this.workDurationInput.value),\n      shortBreak: parseInt(this.shortBreakInput.value),\n      longBreak: parseInt(this.longBreakInput.value),\n      autoStartBreaks: this.autoStartInput.checked,\n      soundEnabled: this.soundEnabledInput.checked,\n      sessionsUntilLongBreak: DEFAULT_SETTINGS.sessionsUntilLongBreak\n    };\n\n    // Save to localStorage\n    localStorage.setItem('fokus_settings', JSON.stringify(settings));\n\n    // Apply to timer\n    this.timer.updateSettings(settings);\n\n    // Dispatch event for other components that might need to know\n    document.dispatchEvent(new CustomEvent('settingsChanged', { detail: settings }));\n  }\n\n  public getSettings(): Settings {\n    return {\n      workDuration: parseInt(this.workDurationInput.value),\n      shortBreak: parseInt(this.shortBreakInput.value),\n      longBreak: parseInt(this.longBreakInput.value),\n      autoStartBreaks: this.autoStartInput.checked,\n      soundEnabled: this.soundEnabledInput.checked,\n      sessionsUntilLongBreak: DEFAULT_SETTINGS.sessionsUntilLongBreak\n    };\n  }\n\n  public resetToDefaults(): void {\n    this.workDurationInput.value = DEFAULT_SETTINGS.workDuration.toString();\n    this.shortBreakInput.value = DEFAULT_SETTINGS.shortBreak.toString();\n    this.longBreakInput.value = DEFAULT_SETTINGS.longBreak.toString();\n    this.autoStartInput.checked = DEFAULT_SETTINGS.autoStartBreaks;\n    this.soundEnabledInput.checked = DEFAULT_SETTINGS.soundEnabled;\n\n    this.saveAndApplySettings();\n  }\n}","export interface TodoItem {\n  id: string;\n  text: string;\n  completed: boolean;\n  createdAt: number;\n}\n\nexport interface TodoStorageData {\n  todos: TodoItem[];\n  expiresAt: number;\n}\n\nconst STORAGE_KEY = 'fokus_todos';\nconst CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n\nexport class TodoStorage {\n  private static instance: TodoStorage;\n  private todos: TodoItem[] = [];\n\n  private constructor() {\n    this.loadTodos();\n  }\n\n  public static getInstance(): TodoStorage {\n    if (!TodoStorage.instance) {\n      TodoStorage.instance = new TodoStorage();\n    }\n    return TodoStorage.instance;\n  }\n\n  private loadTodos(): void {\n    try {\n      // Try sessionStorage first (automatically clears when tab closes)\n      let saved = sessionStorage.getItem(STORAGE_KEY);\n\n      if (!saved) {\n        // Fallback to localStorage with expiration check\n        saved = localStorage.getItem(STORAGE_KEY);\n\n        if (saved) {\n          const data: TodoStorageData = JSON.parse(saved);\n\n          // Check if data has expired\n          if (Date.now() > data.expiresAt) {\n            this.clearExpiredData();\n            return;\n          }\n\n          this.todos = data.todos || [];\n\n          // Migrate to sessionStorage for better UX\n          this.saveTodos();\n          localStorage.removeItem(STORAGE_KEY);\n        }\n      } else {\n        const data: TodoStorageData = JSON.parse(saved);\n        this.todos = data.todos || [];\n      }\n    } catch (error) {\n      console.warn('Failed to load todos:', error);\n      this.todos = [];\n    }\n  }\n\n  private saveTodos(): void {\n    try {\n      const data: TodoStorageData = {\n        todos: this.todos,\n        expiresAt: Date.now() + CACHE_DURATION\n      };\n\n      // Save to sessionStorage (primary)\n      sessionStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\n      // Also save to localStorage as backup for 24-hour persistence\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    } catch (error) {\n      console.warn('Failed to save todos:', error);\n    }\n  }\n\n  private clearExpiredData(): void {\n    this.todos = [];\n    localStorage.removeItem(STORAGE_KEY);\n    sessionStorage.removeItem(STORAGE_KEY);\n  }\n\n  public addTodo(text: string): TodoItem {\n    const todo: TodoItem = {\n      id: this.generateId(),\n      text: text.trim(),\n      completed: false,\n      createdAt: Date.now()\n    };\n\n    this.todos.unshift(todo); // Add to beginning\n    this.saveTodos();\n    return todo;\n  }\n\n  public toggleTodo(id: string): TodoItem | null {\n    const todo = this.todos.find(t => t.id === id);\n    if (todo) {\n      todo.completed = !todo.completed;\n      this.saveTodos();\n      return todo;\n    }\n    return null;\n  }\n\n  public deleteTodo(id: string): boolean {\n    const index = this.todos.findIndex(t => t.id === id);\n    if (index !== -1) {\n      this.todos.splice(index, 1);\n      this.saveTodos();\n      return true;\n    }\n    return false;\n  }\n\n  public updateTodo(id: string, text: string): TodoItem | null {\n    const todo = this.todos.find(t => t.id === id);\n    if (todo) {\n      todo.text = text.trim();\n      this.saveTodos();\n      return todo;\n    }\n    return null;\n  }\n\n  public getTodos(): TodoItem[] {\n    return [...this.todos];\n  }\n\n  public getActiveTodos(): TodoItem[] {\n    return this.todos.filter(todo => !todo.completed);\n  }\n\n  public getCompletedTodos(): TodoItem[] {\n    return this.todos.filter(todo => todo.completed);\n  }\n\n  public getTodoCount(): { total: number; active: number; completed: number } {\n    const total = this.todos.length;\n    const completed = this.todos.filter(todo => todo.completed).length;\n    const active = total - completed;\n\n    return { total, active, completed };\n  }\n\n  public clearCompleted(): number {\n    const completedCount = this.todos.filter(todo => todo.completed).length;\n    this.todos = this.todos.filter(todo => !todo.completed);\n    this.saveTodos();\n    return completedCount;\n  }\n\n  public clearAll(): void {\n    this.todos = [];\n    this.saveTodos();\n  }\n\n  private generateId(): string {\n    return `todo_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  // Utility methods for cache management\n  public getCacheInfo(): {\n    expiresAt: number;\n    timeRemaining: number;\n    isExpired: boolean;\n    totalItems: number;\n  } {\n    try {\n      const saved = localStorage.getItem(STORAGE_KEY) || sessionStorage.getItem(STORAGE_KEY);\n      if (saved) {\n        const data: TodoStorageData = JSON.parse(saved);\n        const timeRemaining = Math.max(0, data.expiresAt - Date.now());\n        const isExpired = timeRemaining === 0;\n\n        return {\n          expiresAt: data.expiresAt,\n          timeRemaining,\n          isExpired,\n          totalItems: this.todos.length\n        };\n      }\n    } catch (error) {\n      console.warn('Failed to get cache info:', error);\n    }\n\n    return {\n      expiresAt: Date.now() + CACHE_DURATION,\n      timeRemaining: CACHE_DURATION,\n      isExpired: false,\n      totalItems: this.todos.length\n    };\n  }\n\n  public getTimeUntilExpiry(): string {\n    const { timeRemaining } = this.getCacheInfo();\n\n    if (timeRemaining <= 0) {\n      return 'Expired';\n    }\n\n    const hours = Math.floor(timeRemaining / (1000 * 60 * 60));\n    const minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));\n\n    if (hours > 0) {\n      return `${hours}h ${minutes}m remaining`;\n    } else {\n      return `${minutes}m remaining`;\n    }\n  }\n\n  // Clean up expired data on app startup\n  public static cleanupExpiredData(): void {\n    try {\n      const saved = localStorage.getItem(STORAGE_KEY);\n      if (saved) {\n        const data: TodoStorageData = JSON.parse(saved);\n        if (Date.now() > data.expiresAt) {\n          localStorage.removeItem(STORAGE_KEY);\n          sessionStorage.removeItem(STORAGE_KEY);\n        }\n      }\n    } catch (error) {\n      console.warn('Failed to cleanup expired data:', error);\n    }\n  }\n}","import { TodoStorage, type TodoItem } from '../utils/todoStorage.js';\n\nexport class TodoList {\n  private todoStorage: TodoStorage;\n  private container: HTMLElement;\n  private todoInput!: HTMLInputElement;\n  private addButton!: HTMLButtonElement;\n  private todoList!: HTMLElement;\n  private todoCount: HTMLElement | null = null;\n\n  constructor() {\n    this.todoStorage = TodoStorage.getInstance();\n    this.container = document.querySelector('.todo-section') as HTMLElement;\n\n    if (!this.container) {\n      throw new Error('Todo container not found');\n    }\n\n    this.initializeElements();\n    this.bindEvents();\n    this.render();\n\n    // Clean up expired data on initialization\n    TodoStorage.cleanupExpiredData();\n  }\n\n  private initializeElements(): void {\n    this.todoInput = this.container.querySelector('.todo-input') as HTMLInputElement;\n    this.addButton = this.container.querySelector('.add-todo-btn') as HTMLButtonElement;\n    this.todoList = this.container.querySelector('.todo-list') as HTMLElement;\n    this.todoCount = this.container.querySelector('.todo-count');\n\n    if (!this.todoInput || !this.addButton || !this.todoList) {\n      throw new Error('Required todo elements not found');\n    }\n  }\n\n  private bindEvents(): void {\n    // Add todo on button click\n    this.addButton.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.handleAddTodo();\n    });\n\n    // Add todo on Enter key (use keypress to avoid duplicate firing)\n    this.todoInput.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        this.handleAddTodo();\n      }\n    });\n\n    // Auto-resize input on mobile\n    this.todoInput.addEventListener('input', () => {\n      this.updateAddButtonState();\n    });\n\n    // Handle touch events for mobile\n    this.setupTouchEvents();\n  }\n\n  private setupTouchEvents(): void {\n    let touchStartX = 0;\n    let touchStartTime = 0;\n    let touchedElement: HTMLElement | null = null;\n\n    this.todoList.addEventListener('touchstart', (e) => {\n      if (e.touches.length === 1) {\n        const touch = e.touches[0];\n        touchStartX = touch.clientX;\n        touchStartTime = Date.now();\n        touchedElement = (e.target as HTMLElement).closest('.todo-item');\n      }\n    }, { passive: true });\n\n    this.todoList.addEventListener('touchend', (e) => {\n      if (touchedElement && e.changedTouches.length === 1) {\n        const touch = e.changedTouches[0];\n        const touchEndX = touch.clientX;\n        const touchDuration = Date.now() - touchStartTime;\n        const swipeDistance = touchStartX - touchEndX;\n\n        // Swipe left to delete (minimum 50px swipe, maximum 500ms duration)\n        if (swipeDistance > 50 && touchDuration < 500) {\n          const todoId = touchedElement.dataset.todoId;\n          if (todoId) {\n            this.deleteTodo(todoId);\n          }\n        }\n      }\n\n      touchedElement = null;\n    }, { passive: true });\n  }\n\n  private handleAddTodo(): void {\n    const text = this.todoInput.value.trim();\n\n    if (text === '') {\n      this.showInputError('Please enter a task');\n      return;\n    }\n\n    if (text.length > 200) {\n      this.showInputError('Task is too long (max 200 characters)');\n      return;\n    }\n\n    try {\n      this.todoStorage.addTodo(text);\n      this.todoInput.value = '';\n      this.updateAddButtonState();\n      this.render();\n      this.showSuccessMessage('Task added successfully');\n\n      // Focus back to input for quick adding\n      this.todoInput.focus();\n    } catch (error) {\n      this.showInputError('Failed to add task');\n      console.error('Error adding todo:', error);\n    }\n  }\n\n  private updateAddButtonState(): void {\n    const hasText = this.todoInput.value.trim().length > 0;\n    this.addButton.disabled = !hasText;\n    this.addButton.textContent = hasText ? 'Add' : 'Add Task';\n  }\n\n  private showInputError(message: string): void {\n    this.todoInput.style.borderColor = '#EF4444';\n    this.todoInput.placeholder = message;\n\n    setTimeout(() => {\n      this.todoInput.style.borderColor = '';\n      this.todoInput.placeholder = 'Add a new task...';\n    }, 2000);\n\n    this.todoInput.focus();\n  }\n\n  private showSuccessMessage(_message: string): void {\n    // Create a temporary success indicator\n    const success = document.createElement('div');\n    success.textContent = '✓';\n    success.style.cssText = `\n      position: absolute;\n      right: 12px;\n      top: 50%;\n      transform: translateY(-50%);\n      color: var(--secondary-emerald);\n      font-weight: bold;\n      font-size: 18px;\n      pointer-events: none;\n      animation: fadeInOut 1s ease-in-out;\n    `;\n\n    this.todoInput.parentElement?.style.setProperty('position', 'relative');\n    this.todoInput.parentElement?.appendChild(success);\n\n    setTimeout(() => {\n      success.remove();\n    }, 1000);\n  }\n\n  private completeTodo(id: string): void {\n    try {\n      const todo = this.todoStorage.toggleTodo(id);\n      if (todo) {\n        this.render();\n        this.animateCompletion(id, todo.completed);\n      }\n    } catch (error) {\n      console.error('Error toggling todo:', error);\n    }\n  }\n\n  private deleteTodo(id: string): void {\n    try {\n      if (this.todoStorage.deleteTodo(id)) {\n        this.animateRemoval(id);\n        setTimeout(() => {\n          this.render();\n        }, 300);\n      }\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  }\n\n  private animateCompletion(id: string, completed: boolean): void {\n    const element = this.todoList.querySelector(`[data-todo-id=\"${id}\"]`) as HTMLElement;\n    if (element) {\n      element.style.transform = completed ? 'scale(0.95)' : 'scale(1.05)';\n      element.style.opacity = completed ? '0.7' : '1';\n\n      setTimeout(() => {\n        element.style.transform = 'scale(1)';\n        element.style.opacity = '1';\n      }, 200);\n    }\n  }\n\n  private animateRemoval(id: string): void {\n    const element = this.todoList.querySelector(`[data-todo-id=\"${id}\"]`) as HTMLElement;\n    if (element) {\n      element.style.animation = 'slideOut 0.3s ease-in forwards';\n    }\n  }\n\n  private render(): void {\n    const todos = this.todoStorage.getTodos();\n    const counts = this.todoStorage.getTodoCount();\n\n    // Update todo count if element exists\n    if (this.todoCount) {\n      this.todoCount.textContent = `${counts.active} active, ${counts.completed} completed`;\n    }\n\n    // Clear the list\n    this.todoList.innerHTML = '';\n\n    if (todos.length === 0) {\n      this.renderEmptyState();\n      return;\n    }\n\n    // Render todos\n    todos.forEach(todo => {\n      const todoElement = this.createTodoElement(todo);\n      this.todoList.appendChild(todoElement);\n    });\n\n    // Update button state\n    this.updateAddButtonState();\n  }\n\n  private renderEmptyState(): void {\n    const emptyState = document.createElement('div');\n    emptyState.className = 'todo-empty';\n    emptyState.innerHTML = `\n      <div style=\"font-size: 2rem; margin-bottom: 0.5rem;\">📝</div>\n      <p>No tasks yet. Add one above to get started!</p>\n      <p style=\"font-size: 0.875rem; margin-top: 0.5rem; opacity: 0.7;\">\n        Tasks are saved for 24 hours\n      </p>\n    `;\n    this.todoList.appendChild(emptyState);\n  }\n\n  private createTodoElement(todo: TodoItem): HTMLElement {\n    const todoElement = document.createElement('div');\n    todoElement.className = 'todo-item';\n    todoElement.dataset.todoId = todo.id;\n\n    const isCompleted = todo.completed;\n    const timeAgo = this.getTimeAgo(todo.createdAt);\n\n    todoElement.innerHTML = `\n      <div class=\"todo-text ${isCompleted ? 'completed' : ''}\" title=\"Created ${timeAgo}\">\n        ${this.escapeHtml(todo.text)}\n      </div>\n      <div class=\"todo-actions\">\n        <button class=\"todo-btn complete-btn\"\n                data-action=\"toggle\"\n                data-id=\"${todo.id}\"\n                title=\"${isCompleted ? 'Mark as incomplete' : 'Mark as complete'}\"\n                aria-label=\"${isCompleted ? 'Mark as incomplete' : 'Mark as complete'}\">\n          ${isCompleted ? '↶' : '✓'}\n        </button>\n        <button class=\"todo-btn delete-btn\"\n                data-action=\"delete\"\n                data-id=\"${todo.id}\"\n                title=\"Delete task\"\n                aria-label=\"Delete task\">\n          ✕\n        </button>\n      </div>\n    `;\n\n    // Add event listeners\n    const completeBtn = todoElement.querySelector('[data-action=\"toggle\"]') as HTMLButtonElement;\n    const deleteBtn = todoElement.querySelector('[data-action=\"delete\"]') as HTMLButtonElement;\n\n    completeBtn.addEventListener('click', () => this.completeTodo(todo.id));\n    deleteBtn.addEventListener('click', () => this.deleteTodo(todo.id));\n\n    return todoElement;\n  }\n\n  private getTimeAgo(timestamp: number): string {\n    const now = Date.now();\n    const diff = now - timestamp;\n\n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n\n    if (minutes < 1) return 'just now';\n    if (minutes < 60) return `${minutes}m ago`;\n    if (hours < 24) return `${hours}h ago`;\n\n    return new Date(timestamp).toLocaleDateString();\n  }\n\n  private escapeHtml(text: string): string {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  // Public methods for external interaction\n  public addTodoFromExternal(text: string): boolean {\n    try {\n      this.todoStorage.addTodo(text);\n      this.render();\n      return true;\n    } catch (error) {\n      console.error('Error adding todo externally:', error);\n      return false;\n    }\n  }\n\n  public getTodoStats(): { total: number; active: number; completed: number } {\n    return this.todoStorage.getTodoCount();\n  }\n\n  public clearCompleted(): number {\n    const cleared = this.todoStorage.clearCompleted();\n    this.render();\n    return cleared;\n  }\n\n  public getCacheInfo(): string {\n    return this.todoStorage.getTimeUntilExpiry();\n  }\n\n  // Method to refresh the display (useful for external updates)\n  public refresh(): void {\n    this.render();\n  }\n}\n\n// Add CSS for animations\nconst style = document.createElement('style');\nstyle.textContent = `\n  @keyframes slideOut {\n    from {\n      opacity: 1;\n      transform: translateX(0);\n      max-height: 60px;\n    }\n    to {\n      opacity: 0;\n      transform: translateX(-100%);\n      max-height: 0;\n      padding: 0;\n      margin: 0;\n    }\n  }\n\n  @keyframes fadeInOut {\n    0%, 100% { opacity: 0; transform: translateY(-50%) scale(0.8); }\n    50% { opacity: 1; transform: translateY(-50%) scale(1); }\n  }\n\n  .todo-item.removing {\n    animation: slideOut 0.3s ease-in forwards;\n  }\n\n  .todo-input {\n    transition: border-color 0.2s ease;\n  }\n\n  .todo-btn:active {\n    transform: scale(0.95);\n  }\n\n  @media (hover: none) and (pointer: coarse) {\n    .todo-item {\n      touch-action: pan-x;\n    }\n\n    .todo-item:hover {\n      transform: none;\n    }\n  }\n`;\n\ndocument.head.appendChild(style);","export class AudioNotificationManager {\n  private audioContext: AudioContext | null = null;\n  private soundEnabled: boolean = true;\n\n  constructor() {\n    this.initializeAudioContext();\n    this.listenForSettingsChanges();\n  }\n\n  private initializeAudioContext(): void {\n    // Only create AudioContext when needed to avoid browser warnings\n    document.addEventListener('click', () => {\n      if (!this.audioContext) {\n        this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      }\n    }, { once: true });\n  }\n\n  private listenForSettingsChanges(): void {\n    document.addEventListener('settingsChanged', (event: Event) => {\n      const { soundEnabled } = (event as CustomEvent).detail;\n      this.soundEnabled = soundEnabled;\n    });\n  }\n\n  public async playNotification(type: 'workComplete' | 'breakComplete'): Promise<void> {\n    if (!this.soundEnabled) return;\n\n    try {\n      // Request browser notification permission if not already granted\n      if ('Notification' in window && Notification.permission === 'default') {\n        await Notification.requestPermission();\n      }\n\n      // Show browser notification\n      this.showBrowserNotification(type);\n\n      // Play audio notification\n      await this.playAudioNotification(type);\n    } catch (error) {\n      console.warn('Failed to play notification:', error);\n    }\n  }\n\n  private showBrowserNotification(type: 'workComplete' | 'breakComplete'): void {\n    if ('Notification' in window && Notification.permission === 'granted') {\n      const options: NotificationOptions = {\n        icon: '/vite.svg', // You can replace with a custom icon\n        badge: '/vite.svg',\n        requireInteraction: false,\n        tag: 'fokus-timer'\n      };\n\n      if (type === 'workComplete') {\n        new Notification('Work Session Complete! 🎉', {\n          body: 'Great work! Time for a well-deserved break.',\n          ...options\n        });\n      } else {\n        new Notification('Break Time Over! 💪', {\n          body: 'Ready to get back to work? Let\\'s stay focused!',\n          ...options\n        });\n      }\n    }\n  }\n\n  private async playAudioNotification(type: 'workComplete' | 'breakComplete'): Promise<void> {\n    if (!this.audioContext) {\n      this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n    }\n\n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n    }\n\n    // Create different tones for different notification types\n    if (type === 'workComplete') {\n      await this.playChime(); // Pleasant chime for work completion\n    } else {\n      await this.playAlert(); // Gentle alert for break end\n    }\n  }\n\n  private async playChime(): Promise<void> {\n    if (!this.audioContext) return;\n\n    const gainNode = this.audioContext.createGain();\n    gainNode.connect(this.audioContext.destination);\n\n    // Play a pleasant 3-note chime (C-E-G)\n    const frequencies = [523.25, 659.25, 783.99]; // C5, E5, G5\n    const duration = 0.3;\n\n    for (let i = 0; i < frequencies.length; i++) {\n      setTimeout(() => {\n        this.playTone(frequencies[i], duration, gainNode, 0.1);\n      }, i * 200);\n    }\n  }\n\n  private async playAlert(): Promise<void> {\n    if (!this.audioContext) return;\n\n    const gainNode = this.audioContext.createGain();\n    gainNode.connect(this.audioContext.destination);\n\n    // Play a gentle two-tone alert\n    const frequencies = [440, 554.37]; // A4, C#5\n    const duration = 0.2;\n\n    for (let i = 0; i < 2; i++) {\n      setTimeout(() => {\n        this.playTone(frequencies[i % frequencies.length], duration, gainNode, 0.08);\n      }, i * 300);\n    }\n  }\n\n  private playTone(frequency: number, duration: number, gainNode: GainNode, volume: number): void {\n    if (!this.audioContext) return;\n\n    const oscillator = this.audioContext.createOscillator();\n    const gain = this.audioContext.createGain();\n\n    oscillator.connect(gain);\n    gain.connect(gainNode);\n\n    oscillator.frequency.setValueAtTime(frequency, this.audioContext.currentTime);\n    oscillator.type = 'sine';\n\n    // Create a smooth envelope\n    gain.gain.setValueAtTime(0, this.audioContext.currentTime);\n    gain.gain.linearRampToValueAtTime(volume, this.audioContext.currentTime + 0.01);\n    gain.gain.exponentialRampToValueAtTime(0.001, this.audioContext.currentTime + duration);\n\n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration);\n  }\n\n  public setSoundEnabled(enabled: boolean): void {\n    this.soundEnabled = enabled;\n  }\n\n  public async testNotification(): Promise<void> {\n    await this.playNotification('workComplete');\n  }\n}","import { STORAGE_KEYS, type Settings } from './constants.js';\n\nexport interface SessionRecord {\n  id: string;\n  date: string;\n  sessionType: string;\n  duration: number; // in minutes\n  completed: boolean;\n  startTime: string;\n  endTime?: string;\n}\n\nexport interface DailyStatistics {\n  date: string;\n  sessionsCompleted: number;\n  focusTimeMinutes: number;\n  breakTimeMinutes: number;\n  streak: number;\n}\n\nexport class StorageManager {\n  private static instance: StorageManager;\n\n  private constructor() {}\n\n  public static getInstance(): StorageManager {\n    if (!StorageManager.instance) {\n      StorageManager.instance = new StorageManager();\n    }\n    return StorageManager.instance;\n  }\n\n  // Settings management\n  public saveSettings(settings: Settings): void {\n    try {\n      localStorage.setItem(STORAGE_KEYS.SETTINGS, JSON.stringify(settings));\n    } catch (error) {\n      console.warn('Failed to save settings:', error);\n    }\n  }\n\n  public loadSettings(): Settings | null {\n    try {\n      const saved = localStorage.getItem(STORAGE_KEYS.SETTINGS);\n      return saved ? JSON.parse(saved) : null;\n    } catch (error) {\n      console.warn('Failed to load settings:', error);\n      return null;\n    }\n  }\n\n  // Statistics management\n  public saveStatistics(stats: DailyStatistics): void {\n    try {\n      localStorage.setItem(STORAGE_KEYS.STATISTICS, JSON.stringify(stats));\n    } catch (error) {\n      console.warn('Failed to save statistics:', error);\n    }\n  }\n\n  public loadStatistics(): DailyStatistics | null {\n    try {\n      const saved = localStorage.getItem(STORAGE_KEYS.STATISTICS);\n      return saved ? JSON.parse(saved) : null;\n    } catch (error) {\n      console.warn('Failed to load statistics:', error);\n      return null;\n    }\n  }\n\n  // Session history management\n  public saveSessionRecord(session: SessionRecord): void {\n    try {\n      const existing = this.loadSessionHistory();\n      existing.push(session);\n\n      // Keep only last 100 sessions to prevent storage bloat\n      const limited = existing.slice(-100);\n\n      localStorage.setItem(STORAGE_KEYS.SESSION_HISTORY, JSON.stringify(limited));\n    } catch (error) {\n      console.warn('Failed to save session record:', error);\n    }\n  }\n\n  public loadSessionHistory(): SessionRecord[] {\n    try {\n      const saved = localStorage.getItem(STORAGE_KEYS.SESSION_HISTORY);\n      return saved ? JSON.parse(saved) : [];\n    } catch (error) {\n      console.warn('Failed to load session history:', error);\n      return [];\n    }\n  }\n\n  public getSessionsForDate(date: string): SessionRecord[] {\n    const allSessions = this.loadSessionHistory();\n    return allSessions.filter(session => session.date === date);\n  }\n\n  public getSessionsForDateRange(startDate: string, endDate: string): SessionRecord[] {\n    const allSessions = this.loadSessionHistory();\n    return allSessions.filter(session =>\n      session.date >= startDate && session.date <= endDate\n    );\n  }\n\n  // Daily statistics helpers\n  public calculateDailyStats(date: string): DailyStatistics {\n    const sessions = this.getSessionsForDate(date);\n\n    const workSessions = sessions.filter(s => s.sessionType === 'work' && s.completed);\n    const breakSessions = sessions.filter(s => s.sessionType !== 'work' && s.completed);\n\n    const focusTimeMinutes = workSessions.reduce((total, session) => total + session.duration, 0);\n    const breakTimeMinutes = breakSessions.reduce((total, session) => total + session.duration, 0);\n\n    return {\n      date,\n      sessionsCompleted: workSessions.length,\n      focusTimeMinutes,\n      breakTimeMinutes,\n      streak: this.calculateStreak(date)\n    };\n  }\n\n  private calculateStreak(currentDate: string): number {\n    const allDates = this.getUniqueDatesWithSessions();\n    if (allDates.length === 0) return 0;\n\n    // Sort dates in descending order\n    allDates.sort((a, b) => new Date(b).getTime() - new Date(a).getTime());\n\n    let streak = 0;\n    const today = new Date(currentDate);\n    let checkDate = new Date(today);\n\n    // Check each day backwards from current date\n    for (let i = 0; i < allDates.length; i++) {\n      const sessionDate = new Date(allDates[i]);\n\n      if (this.isSameDate(sessionDate, checkDate)) {\n        const dayStats = this.calculateDailyStats(allDates[i]);\n        if (dayStats.sessionsCompleted > 0) {\n          streak++;\n          checkDate.setDate(checkDate.getDate() - 1);\n        } else {\n          break;\n        }\n      } else if (sessionDate < checkDate) {\n        // Gap in dates, streak broken\n        break;\n      }\n    }\n\n    return streak;\n  }\n\n  private getUniqueDatesWithSessions(): string[] {\n    const sessions = this.loadSessionHistory();\n    const dates = [...new Set(sessions.map(s => s.date))];\n    return dates;\n  }\n\n  private isSameDate(date1: Date, date2: Date): boolean {\n    return date1.toISOString().split('T')[0] === date2.toISOString().split('T')[0];\n  }\n\n  // Utility methods\n  public exportData(): string {\n    const data = {\n      settings: this.loadSettings(),\n      statistics: this.loadStatistics(),\n      sessionHistory: this.loadSessionHistory(),\n      exportDate: new Date().toISOString()\n    };\n\n    return JSON.stringify(data, null, 2);\n  }\n\n  public importData(jsonData: string): boolean {\n    try {\n      const data = JSON.parse(jsonData);\n\n      if (data.settings) {\n        this.saveSettings(data.settings);\n      }\n\n      if (data.statistics) {\n        this.saveStatistics(data.statistics);\n      }\n\n      if (data.sessionHistory && Array.isArray(data.sessionHistory)) {\n        localStorage.setItem(STORAGE_KEYS.SESSION_HISTORY, JSON.stringify(data.sessionHistory));\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Failed to import data:', error);\n      return false;\n    }\n  }\n\n  public clearAllData(): void {\n    try {\n      localStorage.removeItem(STORAGE_KEYS.SETTINGS);\n      localStorage.removeItem(STORAGE_KEYS.STATISTICS);\n      localStorage.removeItem(STORAGE_KEYS.SESSION_HISTORY);\n    } catch (error) {\n      console.warn('Failed to clear data:', error);\n    }\n  }\n\n  // Storage space utilities\n  public getStorageInfo(): { used: number; available: number } {\n    try {\n      let total = 0;\n\n      // Estimate current usage\n      for (const key in localStorage) {\n        if (localStorage.hasOwnProperty(key)) {\n          total += localStorage[key].length + key.length;\n        }\n      }\n\n      return {\n        used: total,\n        available: 5 * 1024 * 1024 - total // Assume 5MB limit\n      };\n    } catch (error) {\n      console.warn('Failed to get storage info:', error);\n      return { used: 0, available: 0 };\n    }\n  }\n}","import { PomodoroTimer } from './components/Timer.js';\nimport { TimerDisplay } from './components/Display.js';\nimport { TimerControls } from './components/Controls.js';\nimport { Statistics } from './components/Statistics.js';\nimport { SettingsManager } from './components/Settings.js';\nimport { TodoList } from './components/TodoList.js';\nimport { AudioNotificationManager } from './utils/audio.js';\nimport { StorageManager } from './utils/storage.js';\nimport { TodoStorage } from './utils/todoStorage.js';\nimport { SESSION_TYPES, TIMER_STATES } from './utils/constants.js';\nimport './styles/main.css';\n\n// Particle system removed for static design\n\n// Minimal Luxury Theme Manager\nclass ThemeManager {\n  private isDark: boolean = false;\n  private toggleButton: HTMLButtonElement | null = null;\n  private themeIcon: HTMLElement | null = null;\n\n  constructor() {\n    this.initializeTheme();\n    this.setupToggleButton();\n  }\n\n  private initializeTheme(): void {\n    // Check localStorage for saved preference\n    const savedTheme = localStorage.getItem('fokus-theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    this.isDark = savedTheme ? savedTheme === 'dark' : prefersDark;\n    this.applyTheme();\n\n    // Listen for system theme changes\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\n      if (!localStorage.getItem('fokus-theme')) {\n        this.isDark = e.matches;\n        this.applyTheme();\n        this.updateToggleIcon();\n      }\n    });\n  }\n\n  private setupToggleButton(): void {\n    this.toggleButton = document.getElementById('theme-toggle') as HTMLButtonElement;\n    this.themeIcon = document.querySelector('.theme-icon');\n\n    if (this.toggleButton) {\n      this.toggleButton.addEventListener('click', () => {\n        this.toggleTheme();\n      });\n    }\n\n    this.updateToggleIcon();\n  }\n\n  private applyTheme(): void {\n    if (this.isDark) {\n      document.body.classList.remove('light');\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n      document.body.classList.add('light');\n    }\n  }\n\n  private updateToggleIcon(): void {\n    if (this.themeIcon) {\n      this.themeIcon.textContent = this.isDark ? '☀️' : '🌙';\n    }\n  }\n\n  public toggleTheme(): void {\n    this.isDark = !this.isDark;\n    this.applyTheme();\n    this.updateToggleIcon();\n\n    // Save preference\n    localStorage.setItem('fokus-theme', this.isDark ? 'dark' : 'light');\n  }\n\n  public getCurrentTheme(): string {\n    return this.isDark ? 'dark' : 'light';\n  }\n}\n\n// Interactive effects removed for static design\n\nclass FokusApp {\n  private timer: PomodoroTimer;\n  private display!: TimerDisplay;\n  private controls!: TimerControls;\n  private statistics!: Statistics;\n  private settings!: SettingsManager;\n  private todoList!: TodoList;\n  private audioManager: AudioNotificationManager;\n  private storageManager: StorageManager;\n  private todoStorage: TodoStorage;\n  private themeManager!: ThemeManager;\n\n  constructor() {\n    this.storageManager = StorageManager.getInstance();\n    this.todoStorage = TodoStorage.getInstance();\n    this.timer = new PomodoroTimer();\n    this.audioManager = new AudioNotificationManager();\n\n    this.initializeComponents();\n    this.initializeLuxuryEffects();\n    this.bindGlobalEvents();\n    this.setupNotifications();\n    this.setupPWAFeatures();\n    this.handleURLParameters();\n\n    console.log('🎯 Fokus App with minimal luxury design initialized successfully!');\n  }\n\n  private initializeLuxuryEffects(): void {\n    // Initialize theme system only\n    this.themeManager = new ThemeManager();\n\n    // Particle system and interactive effects disabled for static design\n    // this.particleSystem = new ParticleSystem();\n    // this.interactiveEffects = new InteractiveEffects();\n\n    // Store references to prevent unused variable warnings\n    void this.themeManager;\n\n    // Setup info popup functionality\n    this.setupInfoPopup();\n  }\n\n  private setupInfoPopup(): void {\n    const infoBtn = document.getElementById('info-btn');\n    const infoPopup = document.getElementById('info-popup');\n    const closePopup = document.getElementById('close-popup');\n\n    if (!infoBtn || !infoPopup || !closePopup) return;\n\n    // Open popup on button click\n    infoBtn.addEventListener('click', () => {\n      infoPopup.classList.add('active');\n      document.body.style.overflow = 'hidden'; // Prevent background scrolling\n    });\n\n    // Close popup on close button click\n    closePopup.addEventListener('click', () => {\n      infoPopup.classList.remove('active');\n      document.body.style.overflow = ''; // Restore scrolling\n    });\n\n    // Close popup on background click\n    infoPopup.addEventListener('click', (e) => {\n      if (e.target === infoPopup) {\n        infoPopup.classList.remove('active');\n        document.body.style.overflow = '';\n      }\n    });\n\n    // Close popup on Escape key\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && infoPopup.classList.contains('active')) {\n        infoPopup.classList.remove('active');\n        document.body.style.overflow = '';\n      }\n    });\n  }\n\n  private initializeComponents(): void {\n    // Initialize UI components (stored as properties for potential future use)\n    this.display = new TimerDisplay(this.timer);\n    this.controls = new TimerControls(this.timer);\n    this.statistics = new Statistics(this.timer);\n    this.settings = new SettingsManager(this.timer);\n    this.todoList = new TodoList();\n\n    // Components work via side effects during instantiation\n    void this.display;\n    void this.controls;\n    void this.statistics;\n    void this.settings;\n    void this.todoList;\n  }\n\n  private bindGlobalEvents(): void {\n    // Handle timer completion events\n    this.timer.addEventListener('timerUpdate', (event: Event) => {\n      const eventData = (event as CustomEvent).detail;\n\n      if (eventData.state === TIMER_STATES.COMPLETED) {\n        this.handleSessionCompletion(eventData);\n      }\n    });\n\n    // Handle page visibility changes (pause timer when tab is hidden)\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden && this.timer.getState() === TIMER_STATES.RUNNING) {\n        // Don't automatically pause - users might want timer to continue\n        // Just update the title to show current state\n        this.updateTabTitle();\n      }\n    });\n\n    // Handle beforeunload to warn about active timer\n    window.addEventListener('beforeunload', (event) => {\n      if (this.timer.getState() === TIMER_STATES.RUNNING) {\n        event.preventDefault();\n        event.returnValue = 'You have an active timer running. Are you sure you want to leave?';\n        return event.returnValue;\n      }\n    });\n  }\n\n  private setupNotifications(): void {\n    // Request notification permission on first user interaction\n    document.addEventListener('click', () => {\n      if ('Notification' in window && Notification.permission === 'default') {\n        Notification.requestPermission().then(permission => {\n          if (permission === 'granted') {\n            console.log('✅ Notifications enabled');\n          }\n        });\n      }\n    }, { once: true });\n  }\n\n  private async handleSessionCompletion(eventData: any): Promise<void> {\n    const { sessionType } = eventData;\n\n    // Play appropriate notification\n    if (sessionType === SESSION_TYPES.WORK) {\n      await this.audioManager.playNotification('workComplete');\n    } else {\n      await this.audioManager.playNotification('breakComplete');\n    }\n\n    // Record session in storage\n    this.recordSession(sessionType);\n  }\n\n  private recordSession(sessionType: string): void {\n    const settings = this.timer.getSettings();\n    const duration = sessionType === SESSION_TYPES.WORK\n      ? settings.workDuration\n      : sessionType === SESSION_TYPES.SHORT_BREAK\n        ? settings.shortBreak\n        : settings.longBreak;\n\n    const sessionRecord = {\n      id: this.generateSessionId(),\n      date: new Date().toISOString().split('T')[0],\n      sessionType,\n      duration,\n      completed: true,\n      startTime: new Date(Date.now() - duration * 60 * 1000).toISOString(),\n      endTime: new Date().toISOString()\n    };\n\n    this.storageManager.saveSessionRecord(sessionRecord);\n  }\n\n  private generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private setupPWAFeatures(): void {\n    // Register service worker for offline functionality\n    if ('serviceWorker' in navigator) {\n      window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/sw.js')\n          .then(registration => {\n            console.log('SW registered: ', registration);\n          })\n          .catch(registrationError => {\n            console.log('SW registration failed: ', registrationError);\n          });\n      });\n    }\n\n    // Handle PWA installation prompt\n    let deferredPrompt: any;\n    window.addEventListener('beforeinstallprompt', (e) => {\n      e.preventDefault();\n      deferredPrompt = e;\n\n      // Show install button after a delay\n      setTimeout(() => {\n        this.showInstallPrompt(deferredPrompt);\n      }, 30000); // Show after 30 seconds of usage\n    });\n\n    // Handle app installation\n    window.addEventListener('appinstalled', () => {\n      console.log('Fokus has been installed!');\n      deferredPrompt = null;\n    });\n  }\n\n  private showInstallPrompt(deferredPrompt: any): void {\n    if (!deferredPrompt) return;\n\n    const installBanner = document.createElement('div');\n    installBanner.style.cssText = `\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n      background: var(--primary-gradient);\n      color: white;\n      padding: 1rem 1.5rem;\n      border-radius: var(--radius-xl);\n      box-shadow: var(--shadow-glass);\n      backdrop-filter: var(--glass-blur);\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    installBanner.innerHTML = `\n      <div>\n        <div style=\"font-weight: 600; margin-bottom: 0.25rem;\">Install Fokus</div>\n        <div style=\"font-size: 0.875rem; opacity: 0.9;\">Get the full app experience</div>\n      </div>\n      <button id=\"install-btn\" style=\"\n        background: rgba(255,255,255,0.2);\n        border: none;\n        color: white;\n        padding: 0.5rem 1rem;\n        border-radius: 8px;\n        cursor: pointer;\n        font-weight: 600;\n        white-space: nowrap;\n      \">Install</button>\n      <button id=\"dismiss-btn\" style=\"\n        background: none;\n        border: none;\n        color: white;\n        cursor: pointer;\n        font-size: 1.25rem;\n        padding: 0.25rem;\n        margin-left: 0.5rem;\n      \">✕</button>\n    `;\n\n    document.body.appendChild(installBanner);\n\n    // Handle install button click\n    installBanner.querySelector('#install-btn')?.addEventListener('click', () => {\n      deferredPrompt.prompt();\n      deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === 'accepted') {\n          console.log('User accepted the install prompt');\n        }\n        deferredPrompt = null;\n        installBanner.remove();\n      });\n    });\n\n    // Handle dismiss button click\n    installBanner.querySelector('#dismiss-btn')?.addEventListener('click', () => {\n      installBanner.remove();\n    });\n\n    // Auto-dismiss after 10 seconds\n    setTimeout(() => {\n      if (installBanner.parentNode) {\n        installBanner.remove();\n      }\n    }, 10000);\n  }\n\n  private handleURLParameters(): void {\n    const params = new URLSearchParams(window.location.search);\n    const action = params.get('action');\n\n    switch (action) {\n      case 'start':\n        // Auto-start timer if not already running\n        if (this.timer.getState() === TIMER_STATES.IDLE) {\n          setTimeout(() => this.timer.start(), 1000);\n        }\n        break;\n      case 'add-task':\n        // Focus on todo input\n        setTimeout(() => {\n          const todoInput = document.querySelector('.todo-input') as HTMLInputElement;\n          if (todoInput) {\n            todoInput.focus();\n            todoInput.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }\n        }, 500);\n        break;\n    }\n\n    // Clean URL after handling\n    if (action) {\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  }\n\n  private updateTabTitle(): void {\n    const state = this.timer.getState();\n    const timeRemaining = this.timer.getTimeRemaining();\n    const sessionType = this.timer.getSessionType();\n\n    if (state === TIMER_STATES.RUNNING) {\n      const minutes = Math.floor(timeRemaining / 60);\n      const seconds = timeRemaining % 60;\n      const timeText = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n      const sessionText = sessionType === SESSION_TYPES.WORK ? 'Work' : 'Break';\n      document.title = `${timeText} - ${sessionText} | Fokus`;\n    } else {\n      document.title = 'Fokus - Pomodoro Timer';\n    }\n  }\n\n  // Public methods for debugging/testing\n  public getTimer(): PomodoroTimer {\n    return this.timer;\n  }\n\n  public getStorageManager(): StorageManager {\n    return this.storageManager;\n  }\n\n  public async testNotification(): Promise<void> {\n    await this.audioManager.testNotification();\n  }\n\n  public getTodoList(): TodoList {\n    return this.todoList;\n  }\n\n  public getTodoStorage(): TodoStorage {\n    return this.todoStorage;\n  }\n}\n\n// Initialize the app when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  const app = new FokusApp();\n\n  // Make app available globally for debugging\n  (window as any).fokusApp = app;\n});\n\n// Handle any unhandled errors gracefully\nwindow.addEventListener('error', (event) => {\n  console.error('Fokus App Error:', event.error);\n});\n\nwindow.addEventListener('unhandledrejection', (event) => {\n  console.error('Unhandled Promise Rejection:', event.reason);\n  event.preventDefault();\n});"],"names":["DEFAULT_SETTINGS","SESSION_TYPES","TIMER_STATES","STORAGE_KEYS","PomodoroTimer","settings","__publicField","newSettings","totalDuration","progress","eventData","TimerDisplay","timer","event","data","timeRemaining","sessionType","state","_sessionType","totalSeconds","minutes","seconds","timerSection","timeText","sessionText","TimerControls","e","activeElement","Statistics","sessionsCompleted","today","hours","remainingMinutes","saved","parsed","historyKey","existing","history","todayIndex","entry","thirtyDaysAgo","filtered","sorted","b","streak","checkDate","entryDate","date1","date2","SettingsManager","timeoutId","handleInputChange","input","value","min","max","STORAGE_KEY","CACHE_DURATION","_TodoStorage","error","text","todo","id","t","index","total","completed","active","completedCount","isExpired","TodoStorage","TodoList","touchStartX","touchStartTime","touchedElement","touchEndX","touchDuration","todoId","hasText","message","_message","success","_a","_b","element","todos","counts","todoElement","emptyState","isCompleted","timeAgo","completeBtn","deleteBtn","timestamp","diff","div","cleared","style","AudioNotificationManager","soundEnabled","type","options","gainNode","frequencies","duration","i","frequency","volume","oscillator","gain","enabled","_StorageManager","stats","session","limited","date","startDate","endDate","sessions","workSessions","s","breakSessions","focusTimeMinutes","breakTimeMinutes","currentDate","allDates","sessionDate","jsonData","key","StorageManager","ThemeManager","savedTheme","prefersDark","FokusApp","infoBtn","infoPopup","closePopup","permission","sessionRecord","registration","registrationError","deferredPrompt","installBanner","choiceResult","action","todoInput","app"],"mappings":"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"}